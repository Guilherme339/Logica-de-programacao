Capítulo: Estruturas repetitivas
. PARTE 1: estrutura enquanto

 Problema "crescente" (adaptado de URI 1113) Leia uma quantidade indeterminada de duplas de valores inteiros X e Y.
 Escreva para cada X e Y uma mensagem que indique se estes valores foram digitados em ordem crescente ou decrescente. O programa deve finalizar 
 quando forem digitados dois valores iguais.
	
Algoritmo "crescente"
var
x,y:inteiro

Inicio
 escreva("Digite dois numero: ")
leia(x)
leia(y)
enquanto x  <> y faca
 se x < y entao
 escreval ("CRESCENTE")
senao
escreval ("DECRESCENTE")
fimse
escreval ("Digite outros dois numeros:")
leia(x)
leia(y)
Fimenquanto
Fimalgoritmo




Problema "media_idades" Faça um programa para ler um número indeterminado de dados, contendo cada um, a idade de um indivíduo. 
O último dado, que não entrará nos cálculos, contém um valor de idade negativa. Calcular e imprimir a idade média deste grupo de indivíduos. 
Se for entrado um valor negativo na primeira vez, mostrar a mensagem "IMPOSSIVEL CALCULAR".

Algoritmo "Mediaidades"
Var
idade,soma,cont:inteiro
media:real

Inicio
soma <- 0
cont <- 0
escreval ("Digite as idades:")
leia (idade)
enquanto idade >=0 faca
soma <- soma + idade
cont <- cont +1
leia(idade)
fimenquanto
se cont = 0 entao
escreval ("impossivel calcular")
senao
media <- soma / cont
escreval ("Media = ",media:4:2)
fimse
Fimalgoritmo



Problema "senha_fixa" (adaptado de URI 1114) Escreva um programa que repita a leitura de uma senha até que ela seja válida. 
Para cada leitura de senha incorreta informada, escrever a mensagem "Senha Invalida! Tente novamente:". Quando a senha for informada corretamente deve ser impressa a
mensagem "Acesso Permitido" e o algoritmo encerrado. Considere que a senha correta é o valor 2002.

Algoritmo "senha_fixa"

Var

   senha : caractere

Inicio

   escreva("Digite a senha: ")
   leia(senha)
   
   enquanto senha <> "2002" faca
      escreva("Senha Invalida! Tente novamente: ")
      leia(senha)
   fimenquanto
   
   escreval("Acesso permitido!")

Fimalgoritmo







Problema "quadrante" (adaptado de URI 1115) Escreva um programa para ler as coordenadas (X,Y) de uma quantidade indeterminada de pontos no sistema cartesiano.
Para cada ponto escrever o quadrante a que ele pertence (Q1, Q2, Q3 ou Q4). O algoritmo será encerrado quando pelo menos uma de duas coordenadas for NULA 
(nesta situação sem escrever mensagem alguma)

Algoritmo "quadrante"

Var

x,y:real

Inicio.. 
  escreval("Digite os valores das coordenadas X e Y:")
  leia(x)
  leia(y)

  enquanto (x <> 0 ) e (y <> 0) faca
    se(x > 0) e (y > 0) entao
      escreval("QUADRANTE Q1")
     senao
    se (x < 0) e (y > 0) entao
      escreval("QUADRANTE  Q2")
      senao
    se(x < 0) e (y < 0) entao
      escreval("Quadrante Q3")
      senao
      escreval("Quadrante Q4")
      fimse
      fimse
      fimse
      
      escreval("Digite os valores das coordenadas X e Y:")
      leia(x)
      leia(y)
      fimenquanto
      
      Fimalgoritmo

Problema "validacao_de_nota" (adaptado de URI 1117) Faça um programa que leia as notas referentes às duas avaliações de um aluno.
Calcule e imprima a média semestral. Faça com que o algoritmo só aceite notas válidas (uma nota válida deve pertencer ao intervalo [0,10]).
Cada nota deve ser validada separadamente.

Algoritmo "validação_de_nota"
Var
nota1,nota2:real
media:real

Inicio
escreval("Digite a primeira nota:")
leia(nota1)
enquanto (nota1<0) ou (nota1>10) faca
   escreval("valor invalido tente novamente:")
   leia(nota1)
   fimenquanto
   escreval("Digite a segunda nota")
   leia(nota2)
   enquanto (nota2 < 0) ou (nota2 >10) faca
   escreval ("valor invalido! tente novamente:")
   leia (nota2)
   fimenquanto
   media <- (nota1+nota2)/2
    escreval ("media =",media:4:2)
Fimalgoritmo

Problema "combustivel" (adaptado de URI 1134) Um posto de combustíveis deseja determinar qual de seus produtos tem a preferência de seus clientes.
Escreva um algoritmo para ler o tipo de combustível abastecido (codificado da seguinte forma: 1.Álcool 2.Gasolina 3.Diesel 4.Fim).
Caso o usuário informe um código inválido (fora da faixa de 1 a 4) deve ser solicitado um novo código (até que seja válido). O programa será encerrado
quando o código informado for o número 4, devendo então mostrar a mensagem "MUITO OBRIGADO", bem como as quantidades de cada combustível.

Algoritmo "combustivel"
Var
codigo,alcool,gasolina,diesel:inteiro

Inicio

alcool <- 0
gasolina <- 0
diesel <- 0
escreval("Informe um codigo (1, 2, 3) ou 4 para parar:")
leia(codigo)

enquanto codigo <> 4 faca

escolha codigo
caso 1
alcool <- alcool + 1
caso 2
gasolina <- gasolina +1
caso 3
diesel <- diesel +1
fimescolha

escreval("informe um codigo (1,2,3) ou 4 para parar:")
leia (codigo)
fimenquanto

escreval ("Muito obrigado")
escreval ("alcool",alcool)
escreval("gasolina",gasolina)
escreval("diesel",diesel)
Fimalgoritmo



Problema "pares_consecutivos" (adaptado de URI 1159) O programa deve ler um valor inteiro X indefinidas vezes. 
(O programa irá parar quando o valor de X for igual a 0). Para cada X lido, imprima a soma dos 5 pares consecutivos a partir de X, 
inclusive o X , se for par. Se o valor de entrada for 4, por exemplo, a saída deve ser 40, que é o resultado da operação: 4+6+8+10+12, 
enquanto que se o valor de entrada for 11, por exempo, a saída deve ser 80, que é a soma de 12+14+16+18+20.

Algoritmo "pares_consecutivos"
Var
x,soma:inteiro

Inicio
   escreva ("Digite um numero inteiro:")
   leia(x)

   enquanto x <> 0 faca
    se x % 2 <> 0 entao
    x <- x + 1
    fimse
    soma <- 5 * x + 20
    escreval("Soma =", soma)

    escreva ("Digite um numero inteiro:")
   leia(x)

    fimenquanto
   Fimalgoritmo

PARTE 2: estrutura para
 Problema "tabuada" Ler um número inteiro N, daí mostrar na tela a tabuada de N para 1 a 10, conforme exemplo

Algoritmo "tabuada"
var
n,i,produto:inteiro

Inicio
escreval("Deseja a tabuada para qual valor ?")
leia(n)
para i de 1 ate 10 faca
produto <- n*i
escreval (n,"x",i,"=",produto)
fimpara
Fimalgoritmo

Problema "soma_impares" (adaptado de URI 1071) Leia 2 valores inteiros X e Y (em qualquer ordem). A seguir, calcule e mostre a soma dos números impares entre eles.

Algoritmo "soma_impares"

Var

   X, Y, troca, i, soma : inteiro

Inicio

   escreval("Digite dois numeros:")
   leia(X)
   leia(Y)

   se X > Y entao
      troca <- x
      x <- y
      y <- troca
   fimse

   soma <- 0
   para i de x+1 ate y-1 faca
      se i % 2 <> 0 entao
         soma <- soma + i
      fimse
   fimpara

   escreval("SOMA DOS IMPARES = ", soma)

Fimalgoritmo













Problema "sequencia_impares" (adaptado de URI 1067) Leia um valor inteiro X. Em seguida mostre os ímpares de 1 até X, um valor por linha,
inclusive o X, se for o caso.

Algoritmo "sequencia_impares"
Var
x,i:inteiro

Inicio
   escreval ("Digite o valor de X:")
   leia(x)
   para i de 1 ate x faca
   se i % 2 <> 0  entao
      escreva(i)
   fimse
   fimpara
   Fimalgoritmo

Problema "dentro_fora" (adaptado de URI 1072) Leia um valor inteiro N. Este valor será a quantidade de valores inteiros X que serão lidos em seguida. Mostre quantos destes valores X estão dentro do intervalo [10,20] e quantos estão fora do intervalo, conforme exemplo

Algoritmo "dentro_fora"
Var
N, x, i, Dentro, Fora:inteiro

Inicio
dentro <- 0
fora <- 0
escreval("Quantos numeros voce vai digitar?")
leia(N)
para i de 1 ate N faca
escreval("Digite um Numero:")
leia(x)
se (x >=10) e (x <= 20) entao
Dentro <- Dentro + 1
senao
Fora <- Fora + 1
fimse
fimpara
escreval("dentro",Dentro)
escreval("fora",Fora)

Fimalgoritmo



Problema "par_impar" (adaptado de URI 1074) Leia um valor inteiro N. Este valor será a quantidade de números inteiros que serão lidos em seguida. Para cada valor lido, mostre uma mensagem dizendo se este valor lido é PAR ou IMPAR, e também se é POSITIVO ou NEGATIVO. No caso do valor ser igual a zero (0), seu programa deverá imprimir apenas NULO.
Algoritmo "par_impaar"

Var
i,N,x:inteiro

Inicio
   escreval("Quantos numeros voce vai digitar?")
   leia(N)
   para i de 1 ate N faca
   escreval ("Digite um numero:")
   leia(x)
   se x = 0 entao
   escreval("Nulo")
   senao
   se x % 2 = 0 entao
   se x < 0 entao
   escreval ("PAR NEGATIVO")
   senao
   escreval ("PAR POSITIVO")
   fimse
    senao
    se x < 0 entao
    escreval("IMPAR NEGATIVO")
    senao
    escreval("IMPAR POSITIVO")

    fimse
     fimse
      fimse
      fimpara
Fimalgoritmo









Problema "media_ponderada" (adaptado de URI 1079) Leia um valor inteiro N, que representa o número de casos de teste que vem a seguir.
Cada caso de teste consiste de 3 valores reais, para os quais você deverá calcular e mostrar a média ponderada, sendo que o primeiro valor tem peso 2,
o segundo valor tem peso 3 e o terceiro valor tem peso 5. Vale lembrar que a média ponderada é a soma de todos os valores multiplicados pelo seu respectivo peso, 
dividida pela soma dos pesos.

Algoritmo "media_ponderada"
Var
N,i:inteiro
a,b,c,media:real

Inicio.
   escreval("Quantos casos voce vai digitar?")
   leia(N)
   para i de 1 ate N faca
   escreval ("Digite tres numeros:")
   leia(a)
   leia(b)
   leia(c)
    media <- (a * 2 + b * 3 + c * 5)/10
   escreval("Media=",media:3:1)
   fimpara
   Fimalgoritmo








Problema "divisao" (adaptado de URI 1116) Escreva um algoritmo que leia dois números e imprima o resultado da divisão do primeiro pelo segundo.
Caso não for possível, mostre a mensagem “DIVISAO IMPOSSIVEL”.


Algoritmo "divisão"
Var
N,i:inteiro
x,y,divisao :real

Inicio
   escreval("Quantos casos voce vai digitar?")
   leia(N)

   para i de 1 ate N faca

   escreval ("Entre com o numerador:")
   leia(x)
   escreval ("Entre com o denominador:")
   leia(y)
   se y = 0 entao
   escreval("DIVISÃO IMPOSSIVEL")
   senao
   divisao <- x/y
   escreval("Divisão= ",divisao:4:2)
   fimse
   fimpara
   Fimalgoritmo




problema "fatorial" (adaptado de URI 1153) Fazer um programa para ler um número natural N (valor máximo: 15), e depois calcular e mostrar o fatorial de N.


Algoritmo "fatorial"
Var

N,i,fat :inteiro

Inicio
   escreval("Digite o valor de N:")
   leia(N)

   fat <- 1
   para i de 1 ate N faca
     fat <- fat * i
     fimpara

     escreval("Fatorial=", fat)

Fimalgoritmo

Problema "experiencias" (adaptado de URI 1094) Maria acabou de iniciar seu curso de graduação na faculdade de medicina e precisa de sua ajuda 
para organizar os experimentos de um laboratório o qual ela é responsável. 
Ela quer saber no final do ano, quantas cobaias foram utilizadas no laboratório e o percentual de cada tipo de cobaia utilizada. 
Este laboratório em especial utiliza três tipos de cobaias: sapos, ratos e coelhos. Para obter estas informações, ela sabe exatamente o número de experimentos 
que foram realizados, o tipo de cobaia utilizada e a quantidade de cobaias utilizadas em cada experimento. Faça um programa que leia
um valor inteiro N que indica os vários casos de teste que vem a seguir. Cada caso de teste contém um inteiro que representa a quantidade de cobaias utilizadas
e uma letra ('C', 'R' ou 'S'), indicando o tipo de cobaia (R:Rato S:Sapo C:Coelho). Apresente o total de cobaias utilizadas, o total de cada tipo de cobaia utilizada 
e o percentual de cada uma em relação ao total de cobaias utilizadas, sendo que o percentual deve ser apresentado com dois dígitos após o ponto.


Algoritmo "experiencias"
Var
N,i,qte,totalCobaias,totalSapos,totalCoelhos,totalRatos:inteiro
pratos,psapos,pcoelhos: real
tipocobaia :caractere

Inicio
totalRatos <- 0
totalCoelhos <- 0
totalSapos <- 0

escreval("Quantos casos de teste serao digitados?")
leia(N)
para i de 1 ate N faca
escreva("Quantidade de cobaias:")
leia(qte)
escreva("Tipo de cobaia:")
leia(tipocobaia)
se tipocobaia = "R" entao
totalRatos <- totalRatos + qte
senao
se tipocobaia = "S" entao
totalSapos <- totalSapos + qte
senao
totalCoelhos <- totalCoelhos + qte
fimse
fimse
fimpara
totalCobaias <- totalRatos + totalSapos + totalCoelhos
pcoelhos <- totaLCoelhos/ totalCobaias * 100
pratos <- totalRatos/ totalCobaias * 100
psapos <- totalSapos /totalcobaias * 100

escreval
escreval("RELATORIO FINAL")
escreval("total:", totalcobaias," cobaias")
escreval("total de Coelhos: ", totalCoelhos)
escreval("total de ratos: ", totalRatos)
escreval("total de sapos: ", totalSapos)
escreval("percentual de coelhos: ", pcoelhos:4:2)
escreval("percentual de ratos: ", pratos)
escreval("percentual de sapos: ", psapos)


Fimalgoritmo
